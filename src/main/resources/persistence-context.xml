<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx 
	    http://www.springframework.org/schema/tx/spring-tx.xsd
	    http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/data/jpa
        http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">
        
    <!-- The priority: listener > filter > servlet -->

	<context:annotation-config />
	<context:component-scan base-package="org.kay" />
	
	<!-- 配置Spring Data JPA扫描目录 -->
	<jpa:repositories base-package="org.kay.framework.persistence.dao"></jpa:repositories>
	
    <jpa:auditing auditor-aware-ref="springSecurityAuditorAware" />  

	<!-- JPA Entity Manager Factory -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
		p:persistenceUnitName="persistenceUnit"
		p:persistenceProviderClass="org.hibernate.jpa.HibernatePersistenceProvider"
		p:dataSource-ref="dataSource"
		p:packagesToScan="org.kay.entity"
		p:jpaVendorAdapter-ref="jpaVendorAdapter"
		p:jpaDialect-ref="jpaDialect"
		p:jpaPropertyMap-ref="jpaPropertyMap" 
		p:persistenceXmlLocation="classpath:META-INF/persistence.xml" /> 
	<bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"
		p:database="ORACLE" 
		p:showSql="false" 
		p:generateDdl="false" 
 		p:databasePlatform="org.hibernate.dialect.Oracle10gDialect" />
	<bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
	<util:map id="jpaPropertyMap">
		<entry key="hibernate.hbm2ddl.auto" value="validate" />
	    <entry key="hibernate.format_sql" value="true" />
	    <entry key="hibernate.use_sql_comments" value="true" />
	    <entry key="hibernate.default_schema" value="KAY" />
	</util:map>
 				
 				
	<!-- Transaction Annotation -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- RESOURCE_LOCAL Transaction -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
		p:entityManagerFactory-ref="entityManagerFactory" />
	

	<!-- JTA Transaction
	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager"
		p:userTransaction-ref="userTransaction" />
	<bean id="userTransaction" class="org.springframework.jndi.JndiObjectFactoryBean" 
		p:jndiName="javax.transaction.UserTransaction"
		p:jndiTemplate-ref="jndiTemplate_weblogic" />
	<bean id="jndiTemplate_weblogic" class="org.springframework.jndi.JndiTemplate" >
		<property name="environment">
			<props >
				<prop key="java.naming.provider.url">t3://localhost:7001</prop>
				<prop key="java.naming.factory.initial">weblogic.jndi.WLInitialContextFactory</prop>
			</props>
		</property>
	</bean>	
	-->
	
	<!-- Spring can understand @PersistenceUnit and @PersistenceContext annotations both at field 
		 and method level if a PersistenceAnnotationBeanPostProcessor is enabled. -->
	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

	
    <!-- This will ensure that hibernate or jpa exceptions are automatically translated into
         Spring's generic DataAccessException hierarchy for those classes annotated with Repository -->
    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	
	
	<!-- The basic configuration above will trigger Bean Validation to initialize 
		 using its default bootstrap mechanism. -->
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>

</beans>